/**
 * GL Journal Events API
 * API for general ledger journal entries including headers and line items
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

export class JournalHeader {
    'journalId': string;
    'journalNumber': string;
    'postingDate': string;
    'effectiveDate'?: string;
    'journalSource': JournalHeaderJournalSourceEnum;
    'description': string;
    'status': JournalHeaderStatusEnum;
    'currency': string;
    'totalDebitAmount': number;
    'totalCreditAmount': number;
    'reversalJournalId'?: string | null;
    'tags'?: Array<string>;
    'fiscalYear'?: number;
    'fiscalPeriod'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "journalId",
            "baseName": "journalId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "journalNumber",
            "baseName": "journalNumber",
            "type": "string",
            "format": ""
        },
        {
            "name": "postingDate",
            "baseName": "postingDate",
            "type": "string",
            "format": "date"
        },
        {
            "name": "effectiveDate",
            "baseName": "effectiveDate",
            "type": "string",
            "format": "date"
        },
        {
            "name": "journalSource",
            "baseName": "journalSource",
            "type": "JournalHeaderJournalSourceEnum",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "JournalHeaderStatusEnum",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string",
            "format": ""
        },
        {
            "name": "totalDebitAmount",
            "baseName": "totalDebitAmount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "totalCreditAmount",
            "baseName": "totalCreditAmount",
            "type": "number",
            "format": "double"
        },
        {
            "name": "reversalJournalId",
            "baseName": "reversalJournalId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "tags",
            "baseName": "tags",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "fiscalYear",
            "baseName": "fiscalYear",
            "type": "number",
            "format": ""
        },
        {
            "name": "fiscalPeriod",
            "baseName": "fiscalPeriod",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return JournalHeader.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum JournalHeaderJournalSourceEnum {
    MANUAL = 'MANUAL',
    IMPORT = 'IMPORT',
    SYSTEM = 'SYSTEM',
    INTERFACE = 'INTERFACE'
}
export enum JournalHeaderStatusEnum {
    DRAFT = 'DRAFT',
    PENDING_APPROVAL = 'PENDING_APPROVAL',
    APPROVED = 'APPROVED',
    POSTED = 'POSTED',
    REVERSED = 'REVERSED'
}

